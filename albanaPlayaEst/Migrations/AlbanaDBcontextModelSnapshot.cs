// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using albanaPlayaEst.Data;

#nullable disable

namespace albanaPlayaEst.Migrations
{
    [DbContext(typeof(AlbanaDBcontext))]
    partial class AlbanaDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("albanaPlayaEst.Models.Cliente", b =>
                {
                    b.Property<int>("Cod_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Cod_cliente"));

                    b.Property<string>("Apell_cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dni_cliente")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Nom_cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tel_cliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Cod_cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Espacio", b =>
                {
                    b.Property<int>("Cod_esp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Cod_esp"));

                    b.Property<decimal>("Cost_esp")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Descr_esp")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Estad_esp")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ubi_esp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Cod_esp");

                    b.ToTable("Espacios");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Metodpag", b =>
                {
                    b.Property<int>("CodMetd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CodMetd"));

                    b.Property<string>("DescrMetd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodMetd");

                    b.ToTable("Metodpags");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Pago", b =>
                {
                    b.Property<int?>("cod_Pag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("cod_Pag"));

                    b.Property<int>("CodMetd")
                        .HasColumnType("int");

                    b.Property<bool>("EsPagoRecurrente")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaPag")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MontPag")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("cod_Pag");

                    b.HasIndex("CodMetd");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Registro", b =>
                {
                    b.Property<int>("CodReg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CodReg"));

                    b.Property<int?>("ClienteCod_cliente")
                        .HasColumnType("int");

                    b.Property<int>("CodEsp")
                        .HasColumnType("int");

                    b.Property<int>("CodV")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaHoraSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("cod_Pag")
                        .HasColumnType("int");

                    b.HasKey("CodReg");

                    b.HasIndex("ClienteCod_cliente");

                    b.HasIndex("CodEsp");

                    b.HasIndex("CodV");

                    b.HasIndex("cod_Pag");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Tipovehic", b =>
                {
                    b.Property<int>("CodTipV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CodTipV"));

                    b.Property<string>("DescrTipV")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CodTipV");

                    b.ToTable("Tipovehics");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Usuario", b =>
                {
                    b.Property<int>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_user"));

                    b.Property<string>("Clave")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("RolesJson")
                        .HasColumnType("longtext");

                    b.HasKey("Id_user");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Vehículo", b =>
                {
                    b.Property<int>("CodV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CodV"));

                    b.Property<int>("CodTipV")
                        .HasColumnType("int");

                    b.Property<int>("Cod_cliente")
                        .HasColumnType("int");

                    b.Property<string>("ColorV")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MarcV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModelV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlacaV")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.HasKey("CodV");

                    b.HasIndex("CodTipV");

                    b.HasIndex("Cod_cliente");

                    b.ToTable("Vehículos");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Pago", b =>
                {
                    b.HasOne("albanaPlayaEst.Models.Metodpag", "CodMetdNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("CodMetd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodMetdNavigation");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Registro", b =>
                {
                    b.HasOne("albanaPlayaEst.Models.Cliente", null)
                        .WithMany("Registros")
                        .HasForeignKey("ClienteCod_cliente");

                    b.HasOne("albanaPlayaEst.Models.Espacio", "CodEspNavigation")
                        .WithMany("Registros")
                        .HasForeignKey("CodEsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("albanaPlayaEst.Models.Vehículo", "CodVNavigation")
                        .WithMany("Registros")
                        .HasForeignKey("CodV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("albanaPlayaEst.Models.Pago", "CodPagNavigation")
                        .WithMany("Registros")
                        .HasForeignKey("cod_Pag");

                    b.Navigation("CodEspNavigation");

                    b.Navigation("CodPagNavigation");

                    b.Navigation("CodVNavigation");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Vehículo", b =>
                {
                    b.HasOne("albanaPlayaEst.Models.Tipovehic", "CodTipVNavigation")
                        .WithMany("Vehículos")
                        .HasForeignKey("CodTipV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("albanaPlayaEst.Models.Cliente", "CodCliNavigation")
                        .WithMany("Vehículo")
                        .HasForeignKey("Cod_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodCliNavigation");

                    b.Navigation("CodTipVNavigation");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Cliente", b =>
                {
                    b.Navigation("Registros");

                    b.Navigation("Vehículo");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Espacio", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Metodpag", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Pago", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Tipovehic", b =>
                {
                    b.Navigation("Vehículos");
                });

            modelBuilder.Entity("albanaPlayaEst.Models.Vehículo", b =>
                {
                    b.Navigation("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
